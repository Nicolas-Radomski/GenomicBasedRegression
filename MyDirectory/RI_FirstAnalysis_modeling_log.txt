########################
####### context  #######
########################
The scikit-learn (sklearn)-based Python workflow independently supports both modeling (i.e., training and testing) and prediction (i.e., using a pre-built model), and implements 5 feature selection methods, 17 model regressors, hyperparameter tuning, performance metric computation, feature and permutation importance analyses, prediction interval estimation, execution monitoring via progress bars, and parallel processing.
########################
###### reference  ######
########################
An article might potentially be published in the future.
########################
##### repositories #####
########################
Please cite:
 GitHub (https://github.com/Nicolas-Radomski/GenomicBasedRegression),
 Docker Hub (https://hub.docker.com/r/nicolasradomski/genomicbasedregression),
 and/or Anaconda Hub (https://anaconda.org/nicolasradomski/genomicbasedregression).
########################
### acknowledgements ###
########################
Many thanks to Andrea De Ruvo, Adriano Di Pasquale and ChatGPT for the insightful discussions that helped improve the algorithm.
########################
####### versions #######
########################
GenomicBasedRegression: 1.1.0 (released in July 2025)
python: 3.12
argparse: 1.1
boruta: 0.4.3
catboost: 1.2.8
joblib: 1.5.1
lightgbm: 4.6.0
numpy: 1.26.4
pandas: 2.2.2
pickle: 4.0
re: 2.2.1
scipy: 1.16.0
sklearn: 1.5.2
tqdm: 4.67.1
tqdm-joblib: 0.0.4
xgboost: 2.1.3
########################
####### arguments ######
########################
subcommand: modeling
inputpath_mutations: genomic_profils_for_modeling.tsv
inputpath_phenotypes: MyDirectory/BRI_FirstAnalysis_phenotype_dataset.tsv
dataset: manual
splitting: None
quantiles: None
limit: 10
featureselection: SKB
regressor: RI
fold: 5
parameters: tuning_parameters_RI.txt
jobs: -1
permutationimportance: True
nrepeats: 10
alpha: 0.05
outputpath: MyDirectory
prefix: RI_FirstAnalysis
debug: 20
warnings: True
nocheck: False
########################
######## checks ########
########################
The warnings were not ignored
The traceback level was set to 20
The recommended versions of Python and packages were properly controlled
The modeling subcommand was used
The provided sample limit per dataset (i.e., 10) meets or exceeds the recommended minimum (i.e., 10), which is expected to support more reliable performance metrics
The minimum required number of samples in the training/testing datasets (i.e., >= 20) and the expected number of columns (i.e., >= 3) in the input file of mutations were properly controlled (i.e., 200 and 11, respectively)
The minimum required number of samples in the training/testing datasets (i.e., >= 20) and the expected number of columns (i.e., = 3) in the input file of phenotypes were properly controlled (i.e., 200 and 3, respectively)
The absence of missing phenotypes in the input file of phenotypes was properly controlled (i.e., the second column)
The expected datasets (i.e., 'training' or 'testing') in the input file of phenotypes were properly controlled (i.e., the third column)
The sorted sample identifiers were confirmed as identical between the input files of mutations and phenotypes/datasets
The provided selection of training/testing datasets (i.e., manual) and percentage of random splitting (i.e., None) were compatible
The provided selection of training/testing datasets (i.e., manual) and number of quantiles (i.e., None) were compatible
The training and testing datasets were constructed based on the 'manual' setting
The Kolmogorov–Smirnov statistic was computed to compare the distributions of phenotypes in the training and testing datasets: 0.04375 (p-value: 1.0)
The number of samples in the training (i.e., 160) and testing (i.e., 40) datasets was properly controlled to be higher than, or equal to, the set limit (i.e., 10)
The input tested mutations include all features required by the trained one-hot encoder
The input tested mutations contain no unexpected features for one-hot encoding
The 10 provided features were one-hot encoded into 80 encoded features
The provided feature selection method was properly recognized: SelectKBest (SKB)
The provided regressor was properly recognized: ridge (RI)
The pipeline components were properly recognized: Pipeline(steps=[('feature_selection', SelectKBest(score_func=functools.partial(<function mutual_info_regression at 0x7fd14970cc20>, random_state=42))), ('model', Ridge())])
The provided tuning parameters were properly recognized: [{'feature_selection__k': [25, 50], 'feature_selection__score_func': [<function mutual_info_regression at 0x7fd14970cc20>], 'model__alpha': [0.01, 1.0, 10.0], 'model__fit_intercept': [True, False], 'model__solver': ['auto'], 'model__tol': [1e-05, 0.0001, 0.001], 'model__max_iter': [1000]}]
The cross-validation setting implied: 7 distinct parameter names, 13 parameter value options, 36 parameter combinations, and 180 fits during cross-validation
The best parameters during model cross-validation were: {'feature_selection__k': 50, 'feature_selection__score_func': <function mutual_info_regression at 0x7fd14970cc20>, 'model__alpha': 1.0, 'model__fit_intercept': True, 'model__max_iter': 1000, 'model__solver': 'auto', 'model__tol': 1e-05}
The best negative root mean squared error during model cross-validation was: -3.31079
The pipeline potentially selected and used 50 one-hot encoded features to train the model
The full one-hot encoded feature names were recovered from the pipeline
The best model returned 50 importance values (absolute coefficient magnitude (coef_)) for 50 one-hot encoded features (potentially selected and/or polynomially expanded)
The prediction intervals (i.e., 95.0%) were calculated using ResidualQuantileWrapper with α = 0.05
The output directory already existed
########################
###### execution #######
########################
The script started on 2025-07-04 10:56:51.795633
The script stoped on 2025-07-04 10:57:13.342004
The script lasted 0 days, 0 hrs, 0 mins and 21.55 secs (i.e., 21.55 secs in total)
########################
##### output files #####
########################
MyDirectory/RI_FirstAnalysis_features.obj
MyDirectory/RI_FirstAnalysis_feature_encoder.obj
MyDirectory/RI_FirstAnalysis_calibration_features.obj
MyDirectory/RI_FirstAnalysis_calibration_targets.obj
MyDirectory/RI_FirstAnalysis_model.obj
MyDirectory/RI_FirstAnalysis_scores_parameters.tsv
MyDirectory/RI_FirstAnalysis_feature_importances.tsv
MyDirectory/RI_FirstAnalysis_permutation_importances.tsv
MyDirectory/RI_FirstAnalysis_metrics_global_training.tsv
MyDirectory/RI_FirstAnalysis_metrics_global_testing.tsv
MyDirectory/RI_FirstAnalysis_prediction_training.tsv
MyDirectory/RI_FirstAnalysis_prediction_testing.tsv
MyDirectory/RI_FirstAnalysis_phenotype_dataset.tsv
MyDirectory/RI_FirstAnalysis_modeling_log.txt
########################
# performance  metrics #
########################
from the training dataset: 
    RMSE      MSE    SMAPE     MAPE      MAE       R2      aR2
2.906946 8.450337 0.144741 0.167176 1.692433 0.973084 0.971278
from the testing dataset: 
    RMSE      MSE    SMAPE     MAPE      MAE       R2     aR2
2.515709 6.328793 0.142025 0.181037 1.594196 0.979522 0.97246
Note: RMSE stands for root mean squared error. 
Note: MSE stands for mean square error. 
Note: MAPE stands for mean absolute percentage error. 
Note: MAE stands for mean absolute error. 
Note: R2 stands for R-squared. 
########################
### training dataset ###
########################
 sample expectation  prediction     lower     upper
S0.1.01          20   25.223509 16.643163 33.656432
S0.1.02          20   25.778311 17.148335 34.161604
S0.1.03          15   16.914766  8.269447 25.282716
S0.1.04          48   48.240706 39.726936 56.740205
S0.1.05          14   14.933985  6.339934 23.353203
S0.1.06          16   15.956593  7.591535 24.604804
S0.1.07          47   43.968563 34.721970 51.735239
S0.1.09          58   58.822079 50.296928 67.310197
S0.1.11          15   16.361129  7.787052 24.800321
S0.1.18           2    3.335472 -5.298462 11.714807
S0.1.19           2    2.511937 -6.010452 11.002817
S0.1.20           4    3.335472 -5.298462 11.714807
S1.1.03          16   16.914766  8.269447 25.282716
S1.1.04          48   48.240706 39.726936 56.740205
S1.1.05          15   14.933985  6.339934 23.353203
S1.1.06          16   15.956593  7.591535 24.604804
S1.1.07          43   43.968563 34.721970 51.735239
S1.1.08          17   15.949433  7.552320 24.565589
S1.1.12          46   48.060100 39.519118 56.532387
S1.1.13          13   15.449859  6.993520 24.006789
Note: Up to 20 results are displayed in the log for monitoring purposes, while the full set of results is available in the output files. 
Note: Lower and upper correspond to the range of the prediction intervals. 
########################
### testing  dataset ###
########################
 sample expectation  prediction     lower     upper
S0.1.08          17   15.949433  7.552320 24.565589
S0.1.10          46   46.607840 38.158501 55.171770
S0.1.12          47   48.060100 39.519118 56.532387
S0.1.13          13   15.449859  6.993520 24.006789
S0.1.14           5    5.304018 -2.958795 14.054474
S0.1.15           6    5.876851 -2.440681 14.572588
S0.1.16           6    7.145827 -1.720846 15.292423
S0.1.17           8    7.267050 -1.187982 15.825287
S1.1.01          24   25.223509 16.643163 33.656432
S1.1.02          26   25.778311 17.148335 34.161604
S1.1.09          58   58.822079 50.296928 67.310197
S1.1.10          46   46.607840 38.158501 55.171770
S1.1.11          15   16.361129  7.787052 24.800321
S2.1.07          50   43.968563 34.721970 51.735239
S2.1.08          20   15.949433  7.552320 24.565589
S3.1.04          48   48.240706 39.726936 56.740205
S3.1.05          25   14.933985  6.339934 23.353203
S3.1.06          16   15.956593  7.591535 24.604804
S4.1.12          46   48.060100 39.519118 56.532387
S4.1.19           2    2.511937 -6.010452 11.002817
Note: Up to 20 results are displayed in the log for monitoring purposes, while the full set of results is available in the output files. 
Note: Lower and upper correspond to the range of the prediction intervals. 
