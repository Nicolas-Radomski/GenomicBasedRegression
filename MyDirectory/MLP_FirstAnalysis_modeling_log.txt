########################
####### context  #######
########################
The scikit-learn (sklearn)-based Python workflow independently supports both modeling (i.e., training and testing) and prediction (i.e., using a pre-built model), and implements 5 feature selection methods, 17 model regressors, hyperparameter tuning, performance metric computation, feature and permutation importance analyses, prediction interval estimation, execution monitoring via progress bars, and parallel processing.
########################
###### reference  ######
########################
An article might potentially be published in the future.
########################
##### repositories #####
########################
Please cite:
 GitHub (https://github.com/Nicolas-Radomski/GenomicBasedRegression),
 Docker Hub (https://hub.docker.com/r/nicolasradomski/genomicbasedregression),
 and/or Anaconda Hub (https://anaconda.org/nicolasradomski/genomicbasedregression).
########################
### acknowledgements ###
########################
Many thanks to Andrea De Ruvo, Adriano Di Pasquale and ChatGPT for the insightful discussions that helped improve the algorithm.
########################
####### versions #######
########################
GenomicBasedRegression: 1.1.0 (released in July 2025)
python: 3.12
argparse: 1.1
boruta: 0.4.3
catboost: 1.2.8
joblib: 1.5.1
lightgbm: 4.6.0
numpy: 1.26.4
pandas: 2.2.2
pickle: 4.0
re: 2.2.1
scipy: 1.16.0
sklearn: 1.5.2
tqdm: 4.67.1
tqdm-joblib: 0.0.4
xgboost: 2.1.3
########################
####### arguments ######
########################
subcommand: modeling
inputpath_mutations: genomic_profils_for_modeling.tsv
inputpath_phenotypes: MyDirectory/BRI_FirstAnalysis_phenotype_dataset.tsv
dataset: manual
splitting: None
quantiles: None
limit: 10
featureselection: SKB
regressor: MLP
fold: 5
parameters: tuning_parameters_MLP.txt
jobs: -1
permutationimportance: True
nrepeats: 10
alpha: 0.05
outputpath: MyDirectory
prefix: MLP_FirstAnalysis
debug: 20
warnings: True
nocheck: False
########################
######## checks ########
########################
The warnings were not ignored
The traceback level was set to 20
The recommended versions of Python and packages were properly controlled
The modeling subcommand was used
The provided sample limit per dataset (i.e., 10) meets or exceeds the recommended minimum (i.e., 10), which is expected to support more reliable performance metrics
The minimum required number of samples in the training/testing datasets (i.e., >= 20) and the expected number of columns (i.e., >= 3) in the input file of mutations were properly controlled (i.e., 200 and 11, respectively)
The minimum required number of samples in the training/testing datasets (i.e., >= 20) and the expected number of columns (i.e., = 3) in the input file of phenotypes were properly controlled (i.e., 200 and 3, respectively)
The absence of missing phenotypes in the input file of phenotypes was properly controlled (i.e., the second column)
The expected datasets (i.e., 'training' or 'testing') in the input file of phenotypes were properly controlled (i.e., the third column)
The sorted sample identifiers were confirmed as identical between the input files of mutations and phenotypes/datasets
The provided selection of training/testing datasets (i.e., manual) and percentage of random splitting (i.e., None) were compatible
The provided selection of training/testing datasets (i.e., manual) and number of quantiles (i.e., None) were compatible
The training and testing datasets were constructed based on the 'manual' setting
The Kolmogorov–Smirnov statistic was computed to compare the distributions of phenotypes in the training and testing datasets: 0.04375 (p-value: 1.0)
The number of samples in the training (i.e., 160) and testing (i.e., 40) datasets was properly controlled to be higher than, or equal to, the set limit (i.e., 10)
The input tested mutations include all features required by the trained one-hot encoder
The input tested mutations contain no unexpected features for one-hot encoding
The 10 provided features were one-hot encoded into 80 encoded features
The provided feature selection method was properly recognized: SelectKBest (SKB)
The provided regressor was properly recognized: multi-layer perceptron (MLP)
The pipeline components were properly recognized: Pipeline(steps=[('feature_selection', SelectKBest(score_func=functools.partial(<function mutual_info_regression at 0x7fe3510b0c20>, random_state=42))), ('model', MLPRegressor(random_state=42))])
The provided tuning parameters were properly recognized: [{'feature_selection__k': [25, 50], 'feature_selection__score_func': [<function mutual_info_regression at 0x7fe3510b0c20>], 'model__hidden_layer_sizes': [(100,)], 'model__activation': ['relu'], 'model__alpha': [0.0001], 'model__learning_rate': ['adaptive'], 'model__learning_rate_init': [0.001], 'model__max_iter': [1000], 'model__early_stopping': [True]}]
The cross-validation setting implied: 9 distinct parameter names, 10 parameter value options, 2 parameter combinations, and 10 fits during cross-validation
The best parameters during model cross-validation were: {'feature_selection__k': 50, 'feature_selection__score_func': <function mutual_info_regression at 0x7fe3510b0c20>, 'model__activation': 'relu', 'model__alpha': 0.0001, 'model__early_stopping': True, 'model__hidden_layer_sizes': (100,), 'model__learning_rate': 'adaptive', 'model__learning_rate_init': 0.001, 'model__max_iter': 1000}
The best negative root mean squared error during model cross-validation was: -5.086841
The pipeline potentially selected and used 50 one-hot encoded features to train the model
The full one-hot encoded feature names were recovered from the pipeline
The selected model regressor did not expose feature importance natively (NaN placeholder)
The prediction intervals (i.e., 95.0%) were calculated using ResidualQuantileWrapper with α = 0.05
The output directory already existed
########################
###### execution #######
########################
The script started on 2025-07-04 10:53:39.952250
The script stoped on 2025-07-04 10:54:14.056281
The script lasted 0 days, 0 hrs, 0 mins and 34.1 secs (i.e., 34.1 secs in total)
########################
##### output files #####
########################
MyDirectory/MLP_FirstAnalysis_features.obj
MyDirectory/MLP_FirstAnalysis_feature_encoder.obj
MyDirectory/MLP_FirstAnalysis_calibration_features.obj
MyDirectory/MLP_FirstAnalysis_calibration_targets.obj
MyDirectory/MLP_FirstAnalysis_model.obj
MyDirectory/MLP_FirstAnalysis_scores_parameters.tsv
MyDirectory/MLP_FirstAnalysis_feature_importances.tsv
MyDirectory/MLP_FirstAnalysis_permutation_importances.tsv
MyDirectory/MLP_FirstAnalysis_metrics_global_training.tsv
MyDirectory/MLP_FirstAnalysis_metrics_global_testing.tsv
MyDirectory/MLP_FirstAnalysis_prediction_training.tsv
MyDirectory/MLP_FirstAnalysis_prediction_testing.tsv
MyDirectory/MLP_FirstAnalysis_phenotype_dataset.tsv
MyDirectory/MLP_FirstAnalysis_modeling_log.txt
########################
# performance  metrics #
########################
from the training dataset: 
    RMSE       MSE    SMAPE     MAPE      MAE       R2      aR2
6.409421 41.080683 0.218898 0.231157 3.597599 0.869151 0.860369
from the testing dataset: 
    RMSE       MSE    SMAPE    MAPE      MAE      R2      aR2
5.255146 27.616559 0.180993 0.22017 2.887108 0.91064 0.879827
Note: RMSE stands for root mean squared error. 
Note: MSE stands for mean square error. 
Note: MAPE stands for mean absolute percentage error. 
Note: MAE stands for mean absolute error. 
Note: R2 stands for R-squared. 
########################
### training dataset ###
########################
 sample expectation  prediction      lower     upper
S0.1.01          20   24.169416   0.172364 46.615302
S0.1.02          20   24.960499   3.325588 49.768526
S0.1.03          15   16.549637  -6.220054 40.222884
S0.1.04          48   47.179666  23.668562 70.111500
S0.1.05          14   17.784912  -5.912163 40.530775
S0.1.06          16   15.396335  -7.084572 39.358366
S0.1.07          47   25.287010  -3.442938 43.000000
S0.1.09          58   48.182972  21.109259 67.552197
S0.1.11          15   18.985557  -7.357870 39.085068
S0.1.18           2    3.712496 -19.830278 26.612660
S0.1.19           2    2.354816 -21.014347 25.428591
S0.1.20           4    3.712496 -19.830278 26.612660
S1.1.03          16   16.549637  -6.220054 40.222884
S1.1.04          48   47.179666  23.668562 70.111500
S1.1.05          15   17.784912  -5.912163 40.530775
S1.1.06          16   15.396335  -7.084572 39.358366
S1.1.07          43   25.287010  -3.442938 43.000000
S1.1.08          17   14.449732  -6.656261 39.786677
S1.1.12          46   46.878746  22.958105 69.401043
S1.1.13          13   22.063485  -1.319097 45.123841
Note: Up to 20 results are displayed in the log for monitoring purposes, while the full set of results is available in the output files. 
Note: Lower and upper correspond to the range of the prediction intervals. 
########################
### testing  dataset ###
########################
 sample expectation  prediction      lower     upper
S0.1.08          17   14.449732  -6.656261 39.786677
S0.1.10          46   46.125265  23.883086 70.326024
S0.1.12          47   46.878746  22.958105 69.401043
S0.1.13          13   22.063485  -1.319097 45.123841
S0.1.14           5    4.886396 -18.240065 28.202873
S0.1.15           6    6.620579 -16.572059 29.870879
S0.1.16           6    8.053318 -14.995129 31.447809
S0.1.17           8    5.670543 -16.621532 29.821406
S1.1.01          24   24.169416   0.172364 46.615302
S1.1.02          26   24.960499   3.325588 49.768526
S1.1.09          58   48.182972  21.109259 67.552197
S1.1.10          46   46.125265  23.883086 70.326024
S1.1.11          15   18.985557  -7.357870 39.085068
S2.1.07          50   25.287010  -3.442938 43.000000
S2.1.08          20   14.449732  -6.656261 39.786677
S3.1.04          48   47.179666  23.668562 70.111500
S3.1.05          25   17.784912  -5.912163 40.530775
S3.1.06          16   15.396335  -7.084572 39.358366
S4.1.12          46   46.878746  22.958105 69.401043
S4.1.19           2    2.354816 -21.014347 25.428591
Note: Up to 20 results are displayed in the log for monitoring purposes, while the full set of results is available in the output files. 
Note: Lower and upper correspond to the range of the prediction intervals. 
