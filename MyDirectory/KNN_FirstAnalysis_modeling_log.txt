########################
####### context  #######
########################
The scikit-learn (sklearn)-based Python workflow independently supports both modeling (i.e., training and testing) and prediction (i.e., using a pre-built model), and implements 5 feature selection methods, 17 model regressors, hyperparameter tuning, performance metric computation, feature and permutation importance analyses, prediction interval estimation, execution monitoring via progress bars, and parallel processing.
########################
###### reference  ######
########################
An article might potentially be published in the future.
########################
##### repositories #####
########################
Please cite:
 GitHub (https://github.com/Nicolas-Radomski/GenomicBasedRegression),
 Docker Hub (https://hub.docker.com/r/nicolasradomski/genomicbasedregression),
 and/or Anaconda Hub (https://anaconda.org/nicolasradomski/genomicbasedregression).
########################
### acknowledgements ###
########################
Many thanks to Andrea De Ruvo, Adriano Di Pasquale and ChatGPT for the insightful discussions that helped improve the algorithm.
########################
####### versions #######
########################
GenomicBasedRegression: 1.1.0 (released in July 2025)
python: 3.12
argparse: 1.1
boruta: 0.4.3
catboost: 1.2.8
joblib: 1.5.1
lightgbm: 4.6.0
numpy: 1.26.4
pandas: 2.2.2
pickle: 4.0
re: 2.2.1
scipy: 1.16.0
sklearn: 1.5.2
tqdm: 4.67.1
tqdm-joblib: 0.0.4
xgboost: 2.1.3
########################
####### arguments ######
########################
subcommand: modeling
inputpath_mutations: genomic_profils_for_modeling.tsv
inputpath_phenotypes: MyDirectory/BRI_FirstAnalysis_phenotype_dataset.tsv
dataset: manual
splitting: None
quantiles: None
limit: 10
featureselection: SKB
regressor: KNN
fold: 5
parameters: tuning_parameters_KNN.txt
jobs: -1
permutationimportance: True
nrepeats: 10
alpha: 0.05
outputpath: MyDirectory
prefix: KNN_FirstAnalysis
debug: 20
warnings: True
nocheck: False
########################
######## checks ########
########################
The warnings were not ignored
The traceback level was set to 20
The recommended versions of Python and packages were properly controlled
The modeling subcommand was used
The provided sample limit per dataset (i.e., 10) meets or exceeds the recommended minimum (i.e., 10), which is expected to support more reliable performance metrics
The minimum required number of samples in the training/testing datasets (i.e., >= 20) and the expected number of columns (i.e., >= 3) in the input file of mutations were properly controlled (i.e., 200 and 11, respectively)
The minimum required number of samples in the training/testing datasets (i.e., >= 20) and the expected number of columns (i.e., = 3) in the input file of phenotypes were properly controlled (i.e., 200 and 3, respectively)
The absence of missing phenotypes in the input file of phenotypes was properly controlled (i.e., the second column)
The expected datasets (i.e., 'training' or 'testing') in the input file of phenotypes were properly controlled (i.e., the third column)
The sorted sample identifiers were confirmed as identical between the input files of mutations and phenotypes/datasets
The provided selection of training/testing datasets (i.e., manual) and percentage of random splitting (i.e., None) were compatible
The provided selection of training/testing datasets (i.e., manual) and number of quantiles (i.e., None) were compatible
The training and testing datasets were constructed based on the 'manual' setting
The Kolmogorov–Smirnov statistic was computed to compare the distributions of phenotypes in the training and testing datasets: 0.04375 (p-value: 1.0)
The number of samples in the training (i.e., 160) and testing (i.e., 40) datasets was properly controlled to be higher than, or equal to, the set limit (i.e., 10)
The input tested mutations include all features required by the trained one-hot encoder
The input tested mutations contain no unexpected features for one-hot encoding
The 10 provided features were one-hot encoded into 80 encoded features
The provided feature selection method was properly recognized: SelectKBest (SKB)
The provided regressor was properly recognized: k-nearest neighbors (KNN)
The pipeline components were properly recognized: Pipeline(steps=[('feature_selection', SelectKBest(score_func=functools.partial(<function mutual_info_regression at 0x7fc45f8fcc20>, random_state=42))), ('model', KNeighborsRegressor())])
The provided tuning parameters were properly recognized: [{'feature_selection__k': [25, 50], 'feature_selection__score_func': [<function mutual_info_regression at 0x7fc45f8fcc20>], 'model__n_neighbors': [5, 15, 25], 'model__weights': ['uniform', 'distance'], 'model__metric': ['minkowski'], 'model__p': [1, 2], 'model__algorithm': ['auto', 'kd_tree'], 'model__leaf_size': [20, 30]}]
The cross-validation setting implied: 8 distinct parameter names, 15 parameter value options, 96 parameter combinations, and 480 fits during cross-validation
The best parameters during model cross-validation were: {'feature_selection__k': 25, 'feature_selection__score_func': <function mutual_info_regression at 0x7fc45f8fcc20>, 'model__algorithm': 'auto', 'model__leaf_size': 30, 'model__metric': 'minkowski', 'model__n_neighbors': 25, 'model__p': 2, 'model__weights': 'distance'}
The best negative root mean squared error during model cross-validation was: -3.117999
The pipeline potentially selected and used 25 one-hot encoded features to train the model
The full one-hot encoded feature names were recovered from the pipeline
The selected model regressor did not expose feature importance natively (NaN placeholder)
The prediction intervals (i.e., 95.0%) were calculated using ResidualQuantileWrapper with α = 0.05
The output directory already existed
########################
###### execution #######
########################
The script started on 2025-07-04 10:51:19.225762
The script stoped on 2025-07-04 10:52:13.272713
The script lasted 0 days, 0 hrs, 0 mins and 54.05 secs (i.e., 54.05 secs in total)
########################
##### output files #####
########################
MyDirectory/KNN_FirstAnalysis_features.obj
MyDirectory/KNN_FirstAnalysis_feature_encoder.obj
MyDirectory/KNN_FirstAnalysis_calibration_features.obj
MyDirectory/KNN_FirstAnalysis_calibration_targets.obj
MyDirectory/KNN_FirstAnalysis_model.obj
MyDirectory/KNN_FirstAnalysis_scores_parameters.tsv
MyDirectory/KNN_FirstAnalysis_feature_importances.tsv
MyDirectory/KNN_FirstAnalysis_permutation_importances.tsv
MyDirectory/KNN_FirstAnalysis_metrics_global_training.tsv
MyDirectory/KNN_FirstAnalysis_metrics_global_testing.tsv
MyDirectory/KNN_FirstAnalysis_prediction_training.tsv
MyDirectory/KNN_FirstAnalysis_prediction_testing.tsv
MyDirectory/KNN_FirstAnalysis_phenotype_dataset.tsv
MyDirectory/KNN_FirstAnalysis_modeling_log.txt
########################
# performance  metrics #
########################
from the training dataset: 
    RMSE       MSE    SMAPE     MAPE      MAE       R2      aR2
3.250252 10.564137 0.134291 0.147749 1.724256 0.966351 0.964093
from the testing dataset: 
    RMSE      MSE    SMAPE     MAPE      MAE       R2      aR2
2.873588 8.257509 0.124595 0.161084 1.646864 0.973281 0.964067
Note: RMSE stands for root mean squared error. 
Note: MSE stands for mean square error. 
Note: MAPE stands for mean absolute percentage error. 
Note: MAE stands for mean absolute error. 
Note: R2 stands for R-squared. 
########################
### training dataset ###
########################
 sample expectation  prediction     lower     upper
S0.1.01          20   25.733333 17.983333 33.483333
S0.1.02          20   25.733333 17.983333 33.483333
S0.1.03          15   17.000000  9.250000 24.750000
S0.1.04          48   48.000000 40.250000 55.750000
S0.1.05          14   14.142857  6.392857 21.892857
S0.1.06          16   16.000000  8.916667 24.416667
S0.1.07          47   44.444444 36.694444 52.194444
S0.1.09          58   53.142857 46.000000 61.500000
S0.1.11          15   16.000000  7.392857 22.892857
S0.1.18           2    3.533333 -4.216667 11.283333
S0.1.19           2    2.750000 -5.000000 10.500000
S0.1.20           4    3.533333 -4.216667 11.283333
S1.1.03          16   17.000000  9.250000 24.750000
S1.1.04          48   48.000000 40.250000 55.750000
S1.1.05          15   14.142857  6.392857 21.892857
S1.1.06          16   16.000000  8.916667 24.416667
S1.1.07          43   44.444444 36.694444 52.194444
S1.1.08          17   17.000000  9.250000 24.750000
S1.1.12          46   53.142857 46.000000 61.500000
S1.1.13          13   15.000000  7.250000 22.750000
Note: Up to 20 results are displayed in the log for monitoring purposes, while the full set of results is available in the output files. 
Note: Lower and upper correspond to the range of the prediction intervals. 
########################
### testing  dataset ###
########################
 sample expectation  prediction     lower     upper
S0.1.08          17   17.000000  9.250000 24.750000
S0.1.10          46   46.000000 38.250000 53.750000
S0.1.12          47   53.142857 46.000000 61.500000
S0.1.13          13   15.000000  7.250000 22.750000
S0.1.14           5    4.777778 -2.972222 12.527778
S0.1.15           6    6.142857 -1.062500 14.437500
S0.1.16           6    7.111111 -1.062500 14.437500
S0.1.17           8    7.000000 -0.750000 14.750000
S1.1.01          24   25.733333 17.983333 33.483333
S1.1.02          26   25.733333 17.983333 33.483333
S1.1.09          58   53.142857 46.000000 61.500000
S1.1.10          46   46.000000 38.250000 53.750000
S1.1.11          15   16.000000  7.392857 22.892857
S2.1.07          50   44.444444 36.694444 52.194444
S2.1.08          20   17.000000  9.250000 24.750000
S3.1.04          48   48.000000 40.250000 55.750000
S3.1.05          25   14.142857  6.392857 21.892857
S3.1.06          16   16.000000  8.916667 24.416667
S4.1.12          46   53.142857 46.000000 61.500000
S4.1.19           2    2.750000 -5.000000 10.500000
Note: Up to 20 results are displayed in the log for monitoring purposes, while the full set of results is available in the output files. 
Note: Lower and upper correspond to the range of the prediction intervals. 
