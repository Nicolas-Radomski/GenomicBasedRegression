########################
####### context  #######
########################
The scikit-learn (sklearn)-based Python workflow independently supports both modeling (i.e., training and testing) and prediction (i.e., using a pre-built model), and implements 5 feature selection methods, 17 model regressors, hyperparameter tuning, performance metric computation, feature and permutation importance analyses, prediction interval estimation, execution monitoring via progress bars, and parallel processing.
########################
###### reference  ######
########################
An article might potentially be published in the future.
########################
##### repositories #####
########################
Please cite:
 GitHub (https://github.com/Nicolas-Radomski/GenomicBasedRegression),
 Docker Hub (https://hub.docker.com/r/nicolasradomski/genomicbasedregression),
 and/or Anaconda Hub (https://anaconda.org/nicolasradomski/genomicbasedregression).
########################
### acknowledgements ###
########################
Many thanks to Andrea De Ruvo, Adriano Di Pasquale and ChatGPT for the insightful discussions that helped improve the algorithm.
########################
####### versions #######
########################
GenomicBasedRegression: 1.1.0 (released in July 2025)
python: 3.12
argparse: 1.1
boruta: 0.4.3
catboost: 1.2.8
joblib: 1.5.1
lightgbm: 4.6.0
numpy: 1.26.4
pandas: 2.2.2
pickle: 4.0
re: 2.2.1
scipy: 1.16.0
sklearn: 1.5.2
tqdm: 4.67.1
tqdm-joblib: 0.0.4
xgboost: 2.1.3
########################
####### arguments ######
########################
subcommand: modeling
inputpath_mutations: genomic_profils_for_modeling.tsv
inputpath_phenotypes: MyDirectory/BRI_FirstAnalysis_phenotype_dataset.tsv
dataset: manual
splitting: None
quantiles: None
limit: 10
featureselection: SKB
regressor: RF
fold: 5
parameters: tuning_parameters_RF.txt
jobs: -1
permutationimportance: True
nrepeats: 10
alpha: 0.05
outputpath: MyDirectory
prefix: RF_FirstAnalysis
debug: 20
warnings: True
nocheck: False
########################
######## checks ########
########################
The warnings were not ignored
The traceback level was set to 20
The recommended versions of Python and packages were properly controlled
The modeling subcommand was used
The provided sample limit per dataset (i.e., 10) meets or exceeds the recommended minimum (i.e., 10), which is expected to support more reliable performance metrics
The minimum required number of samples in the training/testing datasets (i.e., >= 20) and the expected number of columns (i.e., >= 3) in the input file of mutations were properly controlled (i.e., 200 and 11, respectively)
The minimum required number of samples in the training/testing datasets (i.e., >= 20) and the expected number of columns (i.e., = 3) in the input file of phenotypes were properly controlled (i.e., 200 and 3, respectively)
The absence of missing phenotypes in the input file of phenotypes was properly controlled (i.e., the second column)
The expected datasets (i.e., 'training' or 'testing') in the input file of phenotypes were properly controlled (i.e., the third column)
The sorted sample identifiers were confirmed as identical between the input files of mutations and phenotypes/datasets
The provided selection of training/testing datasets (i.e., manual) and percentage of random splitting (i.e., None) were compatible
The provided selection of training/testing datasets (i.e., manual) and number of quantiles (i.e., None) were compatible
The training and testing datasets were constructed based on the 'manual' setting
The Kolmogorov–Smirnov statistic was computed to compare the distributions of phenotypes in the training and testing datasets: 0.04375 (p-value: 1.0)
The number of samples in the training (i.e., 160) and testing (i.e., 40) datasets was properly controlled to be higher than, or equal to, the set limit (i.e., 10)
The input tested mutations include all features required by the trained one-hot encoder
The input tested mutations contain no unexpected features for one-hot encoding
The 10 provided features were one-hot encoded into 80 encoded features
The provided feature selection method was properly recognized: SelectKBest (SKB)
The provided regressor was properly recognized: random forest (RF)
The pipeline components were properly recognized: Pipeline(steps=[('feature_selection', SelectKBest(score_func=functools.partial(<function mutual_info_regression at 0x7f41bcf48c20>, random_state=42))), ('model', RandomForestRegressor(random_state=42))])
The provided tuning parameters were properly recognized: [{'feature_selection__k': [25, 50], 'feature_selection__score_func': [<function mutual_info_regression at 0x7f41bcf48c20>], 'model__n_estimators': [100, 200], 'model__max_depth': [15, None], 'model__min_samples_split': [2, 6], 'model__max_features': ['sqrt'], 'model__bootstrap': [True]}]
The cross-validation setting implied: 7 distinct parameter names, 11 parameter value options, 16 parameter combinations, and 80 fits during cross-validation
The best parameters during model cross-validation were: {'feature_selection__k': 50, 'feature_selection__score_func': <function mutual_info_regression at 0x7f41bcf48c20>, 'model__bootstrap': True, 'model__max_depth': 15, 'model__max_features': 'sqrt', 'model__min_samples_split': 2, 'model__n_estimators': 100}
The best negative root mean squared error during model cross-validation was: -3.226866
The pipeline potentially selected and used 50 one-hot encoded features to train the model
The full one-hot encoded feature names were recovered from the pipeline
The best model returned 50 importance values (tree-based impurity reduction (feature_importances_)) for 50 one-hot encoded features (potentially selected and/or polynomially expanded)
The prediction intervals (i.e., 95.0%) were calculated using ResidualQuantileWrapper with α = 0.05
The output directory already existed
########################
###### execution #######
########################
The script started on 2025-07-04 10:57:27.114047
The script stoped on 2025-07-04 10:57:56.514404
The script lasted 0 days, 0 hrs, 0 mins and 29.4 secs (i.e., 29.4 secs in total)
########################
##### output files #####
########################
MyDirectory/RF_FirstAnalysis_features.obj
MyDirectory/RF_FirstAnalysis_feature_encoder.obj
MyDirectory/RF_FirstAnalysis_calibration_features.obj
MyDirectory/RF_FirstAnalysis_calibration_targets.obj
MyDirectory/RF_FirstAnalysis_model.obj
MyDirectory/RF_FirstAnalysis_scores_parameters.tsv
MyDirectory/RF_FirstAnalysis_feature_importances.tsv
MyDirectory/RF_FirstAnalysis_permutation_importances.tsv
MyDirectory/RF_FirstAnalysis_metrics_global_training.tsv
MyDirectory/RF_FirstAnalysis_metrics_global_testing.tsv
MyDirectory/RF_FirstAnalysis_prediction_training.tsv
MyDirectory/RF_FirstAnalysis_prediction_testing.tsv
MyDirectory/RF_FirstAnalysis_phenotype_dataset.tsv
MyDirectory/RF_FirstAnalysis_modeling_log.txt
########################
# performance  metrics #
########################
from the training dataset: 
    RMSE      MSE    SMAPE     MAPE      MAE       R2      aR2
2.800379 7.842121 0.125899 0.137786 1.503339 0.975021 0.973345
from the testing dataset: 
    RMSE     MSE    SMAPE     MAPE      MAE      R2      aR2
2.332906 5.44245 0.115471 0.155051 1.280158 0.98239 0.976317
Note: RMSE stands for root mean squared error. 
Note: MSE stands for mean square error. 
Note: MAPE stands for mean absolute percentage error. 
Note: MAE stands for mean absolute error. 
Note: R2 stands for R-squared. 
########################
### training dataset ###
########################
 sample expectation  prediction     lower     upper
S0.1.01          20   25.877671 18.549168 33.206175
S0.1.02          20   25.641909 18.304516 32.961524
S0.1.03          15   16.613196  9.262692 23.919700
S0.1.04          48   48.000000 40.671496 55.328504
S0.1.05          14   14.180756  6.852252 21.509260
S0.1.06          16   16.677333  9.348830 24.005837
S0.1.07          47   44.710597 37.382093 52.039101
S0.1.09          58   59.288892 51.960388 66.617396
S0.1.11          15   15.356231  8.027727 22.684734
S0.1.18           2    3.700438 -3.834033 10.822974
S0.1.19           2    2.471429 -4.857075  9.799932
S0.1.20           4    3.700438 -3.834033 10.822974
S1.1.03          16   16.613196  9.262692 23.919700
S1.1.04          48   48.000000 40.671496 55.328504
S1.1.05          15   14.180756  6.852252 21.509260
S1.1.06          16   16.677333  9.348830 24.005837
S1.1.07          43   44.710597 37.382093 52.039101
S1.1.08          17   17.000000  9.671496 24.328504
S1.1.12          46   48.146565 40.818061 55.475069
S1.1.13          13   14.914547  7.586044 22.243051
Note: Up to 20 results are displayed in the log for monitoring purposes, while the full set of results is available in the output files. 
Note: Lower and upper correspond to the range of the prediction intervals. 
########################
### testing  dataset ###
########################
 sample expectation  prediction     lower     upper
S0.1.08          17   17.000000  9.671496 24.328504
S0.1.10          46   46.000000 38.671496 53.328504
S0.1.12          47   48.146565 40.818061 55.475069
S0.1.13          13   14.914547  7.586044 22.243051
S0.1.14           5    4.728586 -2.599917 12.057090
S0.1.15           6    6.123165 -1.205338 13.451669
S0.1.16           6    7.100041 -0.218395 14.438612
S0.1.17           8    7.046075 -0.282429 14.374578
S1.1.01          24   25.877671 18.549168 33.206175
S1.1.02          26   25.641909 18.304516 32.961524
S1.1.09          58   59.288892 51.960388 66.617396
S1.1.10          46   46.000000 38.671496 53.328504
S1.1.11          15   15.356231  8.027727 22.684734
S2.1.07          50   44.710597 37.382093 52.039101
S2.1.08          20   17.000000  9.671496 24.328504
S3.1.04          48   48.000000 40.671496 55.328504
S3.1.05          25   14.180756  6.852252 21.509260
S3.1.06          16   16.677333  9.348830 24.005837
S4.1.12          46   48.146565 40.818061 55.475069
S4.1.19           2    2.471429 -4.857075  9.799932
Note: Up to 20 results are displayed in the log for monitoring purposes, while the full set of results is available in the output files. 
Note: Lower and upper correspond to the range of the prediction intervals. 
