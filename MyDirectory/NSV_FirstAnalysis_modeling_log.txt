########################
####### context  #######
########################
The scikit-learn (sklearn)-based Python workflow independently supports both modeling (i.e., training and testing) and prediction (i.e., using a pre-built model), and implements 5 feature selection methods, 17 model regressors, hyperparameter tuning, performance metric computation, feature and permutation importance analyses, prediction interval estimation, execution monitoring via progress bars, and parallel processing.
########################
###### reference  ######
########################
An article might potentially be published in the future.
########################
##### repositories #####
########################
Please cite:
 GitHub (https://github.com/Nicolas-Radomski/GenomicBasedRegression),
 Docker Hub (https://hub.docker.com/r/nicolasradomski/genomicbasedregression),
 and/or Anaconda Hub (https://anaconda.org/nicolasradomski/genomicbasedregression).
########################
### acknowledgements ###
########################
Many thanks to Andrea De Ruvo, Adriano Di Pasquale and ChatGPT for the insightful discussions that helped improve the algorithm.
########################
####### versions #######
########################
GenomicBasedRegression: 1.1.0 (released in July 2025)
python: 3.12
argparse: 1.1
boruta: 0.4.3
catboost: 1.2.8
joblib: 1.5.1
lightgbm: 4.6.0
numpy: 1.26.4
pandas: 2.2.2
pickle: 4.0
re: 2.2.1
scipy: 1.16.0
sklearn: 1.5.2
tqdm: 4.67.1
tqdm-joblib: 0.0.4
xgboost: 2.1.3
########################
####### arguments ######
########################
subcommand: modeling
inputpath_mutations: genomic_profils_for_modeling.tsv
inputpath_phenotypes: MyDirectory/BRI_FirstAnalysis_phenotype_dataset.tsv
dataset: manual
splitting: None
quantiles: None
limit: 10
featureselection: SKB
regressor: NSV
fold: 5
parameters: tuning_parameters_NSV.txt
jobs: -1
permutationimportance: True
nrepeats: 10
alpha: 0.05
outputpath: MyDirectory
prefix: NSV_FirstAnalysis
debug: 20
warnings: True
nocheck: False
########################
######## checks ########
########################
The warnings were not ignored
The traceback level was set to 20
The recommended versions of Python and packages were properly controlled
The modeling subcommand was used
The provided sample limit per dataset (i.e., 10) meets or exceeds the recommended minimum (i.e., 10), which is expected to support more reliable performance metrics
The minimum required number of samples in the training/testing datasets (i.e., >= 20) and the expected number of columns (i.e., >= 3) in the input file of mutations were properly controlled (i.e., 200 and 11, respectively)
The minimum required number of samples in the training/testing datasets (i.e., >= 20) and the expected number of columns (i.e., = 3) in the input file of phenotypes were properly controlled (i.e., 200 and 3, respectively)
The absence of missing phenotypes in the input file of phenotypes was properly controlled (i.e., the second column)
The expected datasets (i.e., 'training' or 'testing') in the input file of phenotypes were properly controlled (i.e., the third column)
The sorted sample identifiers were confirmed as identical between the input files of mutations and phenotypes/datasets
The provided selection of training/testing datasets (i.e., manual) and percentage of random splitting (i.e., None) were compatible
The provided selection of training/testing datasets (i.e., manual) and number of quantiles (i.e., None) were compatible
The training and testing datasets were constructed based on the 'manual' setting
The Kolmogorov–Smirnov statistic was computed to compare the distributions of phenotypes in the training and testing datasets: 0.04375 (p-value: 1.0)
The number of samples in the training (i.e., 160) and testing (i.e., 40) datasets was properly controlled to be higher than, or equal to, the set limit (i.e., 10)
The input tested mutations include all features required by the trained one-hot encoder
The input tested mutations contain no unexpected features for one-hot encoding
The 10 provided features were one-hot encoded into 80 encoded features
The provided feature selection method was properly recognized: SelectKBest (SKB)
The provided regressor was properly recognized: nu support vector (NSV)
The pipeline components were properly recognized: Pipeline(steps=[('feature_selection', SelectKBest(score_func=functools.partial(<function mutual_info_regression at 0x7f9524fc0c20>, random_state=42))), ('model', NuSVR())])
The provided tuning parameters were properly recognized: [{'feature_selection__k': [25, 50], 'feature_selection__score_func': [<function mutual_info_regression at 0x7f9524fc0c20>], 'model__C': [1, 10], 'model__nu': [0.25, 0.5], 'model__kernel': ['rbf', 'linear'], 'model__gamma': ['scale', 0.1], 'model__degree': [3], 'model__coef0': [0.0], 'model__shrinking': [True], 'model__tol': [0.001, 0.0001], 'model__max_iter': [2000]}]
The cross-validation setting implied: 11 distinct parameter names, 17 parameter value options, 64 parameter combinations, and 320 fits during cross-validation
The best parameters during model cross-validation were: {'feature_selection__k': 50, 'feature_selection__score_func': <function mutual_info_regression at 0x7f9524fc0c20>, 'model__C': 10, 'model__coef0': 0.0, 'model__degree': 3, 'model__gamma': 0.1, 'model__kernel': 'linear', 'model__max_iter': 2000, 'model__nu': 0.5, 'model__shrinking': True, 'model__tol': 0.001}
The best negative root mean squared error during model cross-validation was: -3.041838
The pipeline potentially selected and used 50 one-hot encoded features to train the model
The full one-hot encoded feature names were recovered from the pipeline
The selected model regressor did not expose feature importance natively (absolute coefficient magnitude (coef_))
The prediction intervals (i.e., 95.0%) were calculated using ResidualQuantileWrapper with α = 0.05
The output directory already existed
########################
###### execution #######
########################
The script started on 2025-07-04 10:54:40.868927
The script stoped on 2025-07-04 10:55:18.713674
The script lasted 0 days, 0 hrs, 0 mins and 37.84 secs (i.e., 37.84 secs in total)
########################
##### output files #####
########################
MyDirectory/NSV_FirstAnalysis_features.obj
MyDirectory/NSV_FirstAnalysis_feature_encoder.obj
MyDirectory/NSV_FirstAnalysis_calibration_features.obj
MyDirectory/NSV_FirstAnalysis_calibration_targets.obj
MyDirectory/NSV_FirstAnalysis_model.obj
MyDirectory/NSV_FirstAnalysis_scores_parameters.tsv
MyDirectory/NSV_FirstAnalysis_feature_importances.tsv
MyDirectory/NSV_FirstAnalysis_permutation_importances.tsv
MyDirectory/NSV_FirstAnalysis_metrics_global_training.tsv
MyDirectory/NSV_FirstAnalysis_metrics_global_testing.tsv
MyDirectory/NSV_FirstAnalysis_prediction_training.tsv
MyDirectory/NSV_FirstAnalysis_prediction_testing.tsv
MyDirectory/NSV_FirstAnalysis_phenotype_dataset.tsv
MyDirectory/NSV_FirstAnalysis_modeling_log.txt
########################
# performance  metrics #
########################
from the training dataset: 
    RMSE      MSE    SMAPE     MAPE      MAE       R2      aR2
2.980056 8.880736 0.095293 0.098789 1.165996 0.971713 0.969815
from the testing dataset: 
    RMSE      MSE    SMAPE     MAPE      MAE       R2      aR2
2.356058 5.551007 0.083229 0.128424 0.943725 0.982038 0.975845
Note: RMSE stands for root mean squared error. 
Note: MSE stands for mean square error. 
Note: MAPE stands for mean absolute percentage error. 
Note: MAE stands for mean absolute error. 
Note: R2 stands for R-squared. 
########################
### training dataset ###
########################
 sample expectation  prediction     lower     upper
S0.1.01          20   24.009601 14.968702 33.053522
S0.1.02          20   25.004525 15.966562 34.051381
S0.1.03          15   16.006871  6.966226 25.051046
S0.1.04          48   48.007191 38.960375 57.045194
S0.1.05          14   13.996002  4.964362 23.049181
S0.1.06          16   15.998722  6.963502 25.048321
S0.1.07          47   43.001553 33.965122 52.049942
S0.1.09          58   57.997195 48.952460 67.037280
S0.1.11          15   15.009304  5.972500 24.057320
S0.1.18           2    3.985949 -5.058932 13.025888
S0.1.19           2    2.007191 -7.037118 11.047702
S0.1.20           4    3.985949 -5.058932 13.025888
S1.1.03          16   16.006871  6.966226 25.051046
S1.1.04          48   48.007191 38.960375 57.045194
S1.1.05          15   13.996002  4.964362 23.049181
S1.1.06          16   15.998722  6.963502 25.048321
S1.1.07          43   43.001553 33.965122 52.049942
S1.1.08          17   16.987439  7.950966 26.035786
S1.1.12          46   46.009774 36.967446 55.052266
S1.1.13          13   13.006210  3.964308 22.049127
Note: Up to 20 results are displayed in the log for monitoring purposes, while the full set of results is available in the output files. 
Note: Lower and upper correspond to the range of the prediction intervals. 
########################
### testing  dataset ###
########################
 sample expectation  prediction     lower     upper
S0.1.08          17   16.987439  7.950966 26.035786
S0.1.10          46   46.017191 36.968782 55.053602
S0.1.12          47   46.009774 36.967446 55.052266
S0.1.13          13   13.006210  3.964308 22.049127
S0.1.14           5    5.009105 -4.038729 14.046090
S0.1.15           6    6.009402 -3.035833 15.048987
S0.1.16           6    7.009326 -2.056055 16.028764
S0.1.17           8    7.988090 -1.052123 17.032696
S1.1.01          24   24.009601 14.968702 33.053522
S1.1.02          26   25.004525 15.966562 34.051381
S1.1.09          58   57.997195 48.952460 67.037280
S1.1.10          46   46.017191 36.968782 55.053602
S1.1.11          15   15.009304  5.972500 24.057320
S2.1.07          50   43.001553 33.965122 52.049942
S2.1.08          20   16.987439  7.950966 26.035786
S3.1.04          48   48.007191 38.960375 57.045194
S3.1.05          25   13.996002  4.964362 23.049181
S3.1.06          16   15.998722  6.963502 25.048321
S4.1.12          46   46.009774 36.967446 55.052266
S4.1.19           2    2.007191 -7.037118 11.047702
Note: Up to 20 results are displayed in the log for monitoring purposes, while the full set of results is available in the output files. 
Note: Lower and upper correspond to the range of the prediction intervals. 
