########################
####### context  #######
########################
The scikit-learn (sklearn)-based Python workflow independently supports both modeling (i.e., training and testing) and prediction (i.e., using a pre-built model), and implements 5 feature selection methods, 17 model regressors, hyperparameter tuning, performance metric computation, feature and permutation importance analyses, prediction interval estimation, execution monitoring via progress bars, and parallel processing.
########################
###### reference  ######
########################
An article might potentially be published in the future.
########################
##### repositories #####
########################
Please cite:
 GitHub (https://github.com/Nicolas-Radomski/GenomicBasedRegression),
 Docker Hub (https://hub.docker.com/r/nicolasradomski/genomicbasedregression),
 and/or Anaconda Hub (https://anaconda.org/nicolasradomski/genomicbasedregression).
########################
### acknowledgements ###
########################
Many thanks to Andrea De Ruvo, Adriano Di Pasquale and ChatGPT for the insightful discussions that helped improve the algorithm.
########################
####### versions #######
########################
GenomicBasedRegression: 1.1.0 (released in July 2025)
python: 3.12
argparse: 1.1
boruta: 0.4.3
catboost: 1.2.8
joblib: 1.5.1
lightgbm: 4.6.0
numpy: 1.26.4
pandas: 2.2.2
pickle: 4.0
re: 2.2.1
scipy: 1.16.0
sklearn: 1.5.2
tqdm: 4.67.1
tqdm-joblib: 0.0.4
xgboost: 2.1.3
########################
####### arguments ######
########################
subcommand: modeling
inputpath_mutations: genomic_profils_for_modeling.tsv
inputpath_phenotypes: MyDirectory/BRI_FirstAnalysis_phenotype_dataset.tsv
dataset: manual
splitting: None
quantiles: None
limit: 10
featureselection: SKB
regressor: LA
fold: 5
parameters: tuning_parameters_LA.txt
jobs: -1
permutationimportance: True
nrepeats: 10
alpha: 0.05
outputpath: MyDirectory
prefix: LA_FirstAnalysis
debug: 20
warnings: True
nocheck: False
########################
######## checks ########
########################
The warnings were not ignored
The traceback level was set to 20
The recommended versions of Python and packages were properly controlled
The modeling subcommand was used
The provided sample limit per dataset (i.e., 10) meets or exceeds the recommended minimum (i.e., 10), which is expected to support more reliable performance metrics
The minimum required number of samples in the training/testing datasets (i.e., >= 20) and the expected number of columns (i.e., >= 3) in the input file of mutations were properly controlled (i.e., 200 and 11, respectively)
The minimum required number of samples in the training/testing datasets (i.e., >= 20) and the expected number of columns (i.e., = 3) in the input file of phenotypes were properly controlled (i.e., 200 and 3, respectively)
The absence of missing phenotypes in the input file of phenotypes was properly controlled (i.e., the second column)
The expected datasets (i.e., 'training' or 'testing') in the input file of phenotypes were properly controlled (i.e., the third column)
The sorted sample identifiers were confirmed as identical between the input files of mutations and phenotypes/datasets
The provided selection of training/testing datasets (i.e., manual) and percentage of random splitting (i.e., None) were compatible
The provided selection of training/testing datasets (i.e., manual) and number of quantiles (i.e., None) were compatible
The training and testing datasets were constructed based on the 'manual' setting
The Kolmogorov–Smirnov statistic was computed to compare the distributions of phenotypes in the training and testing datasets: 0.04375 (p-value: 1.0)
The number of samples in the training (i.e., 160) and testing (i.e., 40) datasets was properly controlled to be higher than, or equal to, the set limit (i.e., 10)
The input tested mutations include all features required by the trained one-hot encoder
The input tested mutations contain no unexpected features for one-hot encoding
The 10 provided features were one-hot encoded into 80 encoded features
The provided feature selection method was properly recognized: SelectKBest (SKB)
The provided regressor was properly recognized: lasso (LA)
The pipeline components were properly recognized: Pipeline(steps=[('feature_selection', SelectKBest(score_func=functools.partial(<function mutual_info_regression at 0x7f9a74360c20>, random_state=42))), ('model', Lasso(random_state=42))])
The provided tuning parameters were properly recognized: [{'feature_selection__k': [25, 50], 'feature_selection__score_func': [<function mutual_info_regression at 0x7f9a74360c20>], 'model__alpha': [0.0001, 0.001, 0.01, 0.1], 'model__max_iter': [5000, 10000], 'model__tol': [1e-05], 'model__selection': ['cyclic', 'random'], 'model__fit_intercept': [True], 'model__warm_start': [False]}]
The cross-validation setting implied: 8 distinct parameter names, 14 parameter value options, 32 parameter combinations, and 160 fits during cross-validation
The best parameters during model cross-validation were: {'feature_selection__k': 50, 'feature_selection__score_func': <function mutual_info_regression at 0x7f9a74360c20>, 'model__alpha': 0.001, 'model__fit_intercept': True, 'model__max_iter': 10000, 'model__selection': 'cyclic', 'model__tol': 1e-05, 'model__warm_start': False}
The best negative root mean squared error during model cross-validation was: -3.197594
The pipeline potentially selected and used 50 one-hot encoded features to train the model
The full one-hot encoded feature names were recovered from the pipeline
The best model returned 50 importance values (absolute coefficient magnitude (coef_)) for 50 one-hot encoded features (potentially selected and/or polynomially expanded)
The prediction intervals (i.e., 95.0%) were calculated using ResidualQuantileWrapper with α = 0.05
The output directory already existed
########################
###### execution #######
########################
The script started on 2025-07-04 10:52:24.882633
The script stoped on 2025-07-04 10:52:45.207804
The script lasted 0 days, 0 hrs, 0 mins and 20.33 secs (i.e., 20.33 secs in total)
########################
##### output files #####
########################
MyDirectory/LA_FirstAnalysis_features.obj
MyDirectory/LA_FirstAnalysis_feature_encoder.obj
MyDirectory/LA_FirstAnalysis_calibration_features.obj
MyDirectory/LA_FirstAnalysis_calibration_targets.obj
MyDirectory/LA_FirstAnalysis_model.obj
MyDirectory/LA_FirstAnalysis_scores_parameters.tsv
MyDirectory/LA_FirstAnalysis_feature_importances.tsv
MyDirectory/LA_FirstAnalysis_permutation_importances.tsv
MyDirectory/LA_FirstAnalysis_metrics_global_training.tsv
MyDirectory/LA_FirstAnalysis_metrics_global_testing.tsv
MyDirectory/LA_FirstAnalysis_prediction_training.tsv
MyDirectory/LA_FirstAnalysis_prediction_testing.tsv
MyDirectory/LA_FirstAnalysis_phenotype_dataset.tsv
MyDirectory/LA_FirstAnalysis_modeling_log.txt
########################
# performance  metrics #
########################
from the training dataset: 
    RMSE      MSE    SMAPE     MAPE      MAE       R2      aR2
2.788378 7.775052 0.121498 0.126192 1.485289 0.975235 0.973573
from the testing dataset: 
    RMSE      MSE    SMAPE     MAPE      MAE       R2      aR2
2.445517 5.980555 0.144034 0.168717 1.353582 0.980649 0.973976
Note: RMSE stands for root mean squared error. 
Note: MSE stands for mean square error. 
Note: MAPE stands for mean absolute percentage error. 
Note: MAE stands for mean absolute error. 
Note: R2 stands for R-squared. 
########################
### training dataset ###
########################
 sample expectation  prediction     lower     upper
S0.1.01          20   25.634492 18.044752 33.243871
S0.1.02          20   25.822891 18.190268 33.389387
S0.1.03          15   16.805321  9.218342 24.417461
S0.1.04          48   48.022359 40.381621 55.580740
S0.1.05          14   13.957371  6.358673 21.557793
S0.1.06          16   16.642030  9.032185 24.231304
S0.1.07          47   44.426757 36.827201 52.026320
S0.1.09          58   59.421346 51.848872 67.047991
S0.1.11          15   15.188418  7.588977 22.788097
S0.1.18           2    3.618774 -4.099606 11.099513
S0.1.19           2    2.635759 -4.966134 10.232985
S0.1.20           4    3.618774 -4.099606 11.099513
S1.1.03          16   16.805321  9.218342 24.417461
S1.1.04          48   48.022359 40.381621 55.580740
S1.1.05          15   13.957371  6.358673 21.557793
S1.1.06          16   16.642030  9.032185 24.231304
S1.1.07          43   44.426757 36.827201 52.026320
S1.1.08          17   16.954582  9.377107 24.576226
S1.1.12          46   48.374365 40.774405 55.973524
S1.1.13          13   15.017820  7.418208 22.617327
Note: Up to 20 results are displayed in the log for monitoring purposes, while the full set of results is available in the output files. 
Note: Lower and upper correspond to the range of the prediction intervals. 
########################
### testing  dataset ###
########################
 sample expectation  prediction     lower     upper
S0.1.08          17   16.954582  9.377107 24.576226
S0.1.10          46   46.045760 38.423260 53.622379
S0.1.12          47   48.374365 40.774405 55.973524
S0.1.13          13   15.017820  7.418208 22.617327
S0.1.14           5    4.812521 -2.803839 12.395280
S0.1.15           6    6.179514 -1.433152 13.765967
S0.1.16           6    7.073846 -0.495473 14.703646
S0.1.17           8    6.988747 -0.621709 14.577411
S1.1.01          24   25.634492 18.044752 33.243871
S1.1.02          26   25.822891 18.190268 33.389387
S1.1.09          58   59.421346 51.848872 67.047991
S1.1.10          46   46.045760 38.423260 53.622379
S1.1.11          15   15.188418  7.588977 22.788097
S2.1.07          50   44.426757 36.827201 52.026320
S2.1.08          20   16.954582  9.377107 24.576226
S3.1.04          48   48.022359 40.381621 55.580740
S3.1.05          25   13.957371  6.358673 21.557793
S3.1.06          16   16.642030  9.032185 24.231304
S4.1.12          46   48.374365 40.774405 55.973524
S4.1.19           2    2.635759 -4.966134 10.232985
Note: Up to 20 results are displayed in the log for monitoring purposes, while the full set of results is available in the output files. 
Note: Lower and upper correspond to the range of the prediction intervals. 
