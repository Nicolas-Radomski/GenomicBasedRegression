########################
####### context  #######
########################
The scikit-learn (sklearn)-based Python workflow independently supports both modeling (i.e., training and testing) and prediction (i.e., using a pre-built model), and implements 5 feature selection methods, 17 model regressors, hyperparameter tuning, performance metric computation, feature and permutation importance analyses, prediction interval estimation, execution monitoring via progress bars, and parallel processing.
########################
###### reference  ######
########################
An article might potentially be published in the future.
########################
##### repositories #####
########################
Please cite:
 GitHub (https://github.com/Nicolas-Radomski/GenomicBasedRegression),
 Docker Hub (https://hub.docker.com/r/nicolasradomski/genomicbasedregression),
 and/or Anaconda Hub (https://anaconda.org/nicolasradomski/genomicbasedregression).
########################
### acknowledgements ###
########################
Many thanks to Andrea De Ruvo, Adriano Di Pasquale and ChatGPT for the insightful discussions that helped improve the algorithm.
########################
####### versions #######
########################
GenomicBasedRegression: 1.1.0 (released in July 2025)
python: 3.12
argparse: 1.1
boruta: 0.4.3
catboost: 1.2.8
joblib: 1.5.1
lightgbm: 4.6.0
numpy: 1.26.4
pandas: 2.2.2
pickle: 4.0
re: 2.2.1
scipy: 1.16.0
sklearn: 1.5.2
tqdm: 4.67.1
tqdm-joblib: 0.0.4
xgboost: 2.1.3
########################
####### arguments ######
########################
subcommand: prediction
inputpath_mutations: genomic_profils_for_prediction.tsv
inputpath_features: MyDirectory/CB_FirstAnalysis_features.obj
inputpath_feature_encoder: MyDirectory/CB_FirstAnalysis_feature_encoder.obj
inputpath_calibration_features: MyDirectory/CB_FirstAnalysis_calibration_features.obj
inputpath_calibration_targets: MyDirectory/CB_FirstAnalysis_calibration_targets.obj
inputpath_model: MyDirectory/CB_FirstAnalysis_model.obj
alpha: 0.05
outputpath: MyDirectory
prefix: CB_SecondAnalysis
debug: 20
warnings: True
nocheck: False
########################
######## checks ########
########################
The warnings were not ignored
The traceback level was set to 20
The recommended versions of Python and packages were properly controlled
The prediction subcommand was used
The minimum required number of samples in the dataset (i.e., >= 1) and the expected number of columns (i.e., >= 3) in the input file of mutations were properly controlled (i.e., 20 and 12, respectively)
The input tested mutations include all features required by the trained one-hot encoder
The following unexpected features in the input tested mutations will be ignored for one-hot encoding: ['Locus_11']
The 10 provided features were one-hot encoded into 80 encoded features
The pipeline expected 25 one-hot encoded features to perform prediction
The pipeline components of the provided best model were properly recognized: Pipeline(steps=[('feature_selection', SelectKBest(k=25, score_func=<function mutual_info_regression at 0x7f3c46980c20>)), ('model', <catboost.core.CatBoostRegressor object at 0x7f3c465fdf40>)])
The prediction intervals (i.e., 95.0%) were calculated using a significance level of Î± = 0.05
The output directory already existed
########################
###### execution #######
########################
The script started on 2025-07-04 10:46:37.063645
The script stoped on 2025-07-04 10:46:37.095479
The script lasted 0 days, 0 hrs, 0 mins and 0.03 secs (i.e., 0.03 secs in total)
########################
##### output files #####
########################
MyDirectory/CB_SecondAnalysis_prediction.tsv
MyDirectory/CB_SecondAnalysis_prediction_log.txt
########################
## prediction dataset ##
########################
 sample  prediction     lower     upper
S2.1.01   25.620446 18.035426 33.205466
S2.1.02   25.859387 18.274367 33.444407
S2.1.03   15.652654  8.067634 23.237674
S2.1.04   29.362650 21.777630 36.947670
S2.1.05   14.338291  6.753271 21.923311
S2.1.06   15.168784  7.583764 22.753804
S2.1.07   34.412886 26.827866 41.997906
S2.1.08   16.069478  8.484458 23.654498
S2.1.09   56.053219 48.468199 63.638239
S2.1.10   46.003116 38.418096 53.588136
S2.1.11   15.168784  7.583764 22.753804
S2.1.12   48.373871 40.788851 55.958891
S2.1.13   14.999648  7.414628 22.584668
S2.1.14    4.778844 -2.806176 12.363865
S2.1.15    3.497182 -4.087838 11.082202
S2.1.16    8.630771  1.045751 16.215791
S2.1.17    6.664824 -0.920196 14.249844
S2.1.18    3.497182 -4.087838 11.082202
S2.1.19    2.570793 -5.014227 10.155813
S2.1.20    3.497182 -4.087838 11.082202
Note: Up to 20 results are displayed in the log for monitoring purposes, while the full set of results is available in the output files. 
Lower and upper correspond to the range of the prediction intervals. 
